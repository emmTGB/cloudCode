import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.*;

//???:???????? DataProcessing??
public class DataProcessing
{
	static Hashtable<String, User> users;

	// ???: ?????????Init()????
	
	 public static void Init() { users = new Hashtable<String, User>();
	  
	  // ????: ??Administrator??Operator??Browser??????????????????
	  
	  users.put("jack", new Operator("jack", "123", "operator")); 
	  users.put("rose", new Browser("rose", "123", "browser")); 
	  users.put("kate", new Administrator("kate", "123", "administrator"));
	  
	  }
	 
/*
	// ???: ???????????? ?????Init()????
	public static void Init() throws IOException, DataException
	{
		users = new Hashtable<String, User>();
		String name, password, role;

		BufferedReader br = new BufferedReader(new FileReader("d:\\user.txt"));
		while ((name = br.readLine()) != null)
		{
			password = br.readLine();
			role = br.readLine();

			if (password == null || role == null)
			{
				br.close();
				throw new DataException("???????");
			}

			if (role.equals("Operator"))
				users.put(name, new Operator(name, password, role));
			else if (role.equals("Browser"))
				users.put(name, new Browser(name, password, role));
			else if (role.equals("Administrator"))
				users.put(name, new Administrator(name, password, role));
			else
			{
				br.close();
				throw new DataException("???????");
			}
		}
		br.close();

		// ????????????д?????????file.txt????????????????
	}
*/
	public static User searchUser(String name, String password)
	{
		if (users.containsKey(name))
		{
			User temp = users.get(name);
			if ((temp.getPassword()).equals(password))
				return temp;
		}
		return null;
	}

	public static Enumeration<User> getAllUser()
	{
		Enumeration<User> e = users.elements();
		return e;
	}

	// ??????????
	public static boolean updateUser(String name, String password, String role) throws IOException
	{
		User user;

		if (users.containsKey(name))
		{
			// ??Administrator??Operator??Browser???????????????????
			if (role.equalsIgnoreCase("administrator"))
				user = new Administrator(name, password, role);
			else if (role.equalsIgnoreCase("operator"))
				user = new Operator(name, password, role);
			else
				user = new Browser(name, password, role);
			users.put(name, user);
			updateUserFile();
			return true;
		}
		else
			return false;
	}

	// ?????????
	public static boolean insertUser(String name, String password, String role) throws IOException
	{
		User user;

		if (users.containsKey(name))
			return false;
		else
		{
			// ??Administrator??Operator??Browser???????????????????
			if (role.equalsIgnoreCase("administrator"))
				user = new Administrator(name, password, role);
			else if (role.equalsIgnoreCase("operator"))
				user = new Operator(name, password, role);
			else
				user = new Browser(name, password, role);
			users.put(name, user);
			updateUserFile();
			return true;
		}
	}

	// ??????
	public static boolean deleteUser(String name) throws IOException
	{
		if (users.containsKey(name))
		{
			users.remove(name);
			updateUserFile();
			return true;
		}
		else
			return false;
	}

	// ??????????????
	// ????????д?????user.txt?У?????????????????
	public static void updateUserFile() throws IOException
	{

	}

	// ?????????????????????е?????????????????Щ?????????
	// ??????????????????
	// ??????????ID???????????
	public static Doc searchDoc(String ID)
	{
		return null;
	}

	// ??????е??????????
	public static Enumeration<Doc> getAllDocs()
	{
		return null;
	}

	// ????????????????
	public static boolean insertDoc(String ID, String creator, long timestamp, String description, String filename)
			throws IOException
	{
		updateDocFile();
		return true;
	}

	// ??????????????????д?????file.txt??
	 public static void updateDocFile() throws IOException
	 {

	 }
}
